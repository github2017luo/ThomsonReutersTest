<apex:page applyBodyTag="false" applyHtmlTag="false" sidebar="false" showHeader="false" standardController="Apttus_Config2__ProductConfiguration__c" extensions="APTS_MultiLocationsController" action="{!doinit}" lightningStylesheets="true">

    <html lang="en" ng-app="multiLocationApp">
    <head>
        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <title>Line Item Group Adjustment</title>

        <!-- stylesheets for CPQ like formatting -->
        <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__CPQPageResources,'CPQCommon.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__CPQPageResources,'CPQOptions.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.Apttus_Config2__CPQPageResources, 'CPQDelight.css')}"/>
        <apex:stylesheet value="{!URLFOR($Resource.APTS_customcss)}"/>



        <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.nicescroll/3.6.0/jquery.nicescroll.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.11/angular.min.js" type="text/javascript"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui-sortable/0.13.4/sortable.js" type="text/javascript"></script>

        <!--Tabs required-->
        <script src='https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-animate.min.js'></script>
        <script src='https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-route.min.js'></script>
        <script src='https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-aria.min.js'></script>
        <script src='https://ajax.googleapis.com/ajax/libs/angularjs/1.5.5/angular-messages.min.js'></script>
        <script src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/t-114/svg-assets-cache.js'></script>
        <script src="{!URLFOR($Resource.APTS_Angular_JS)}" ></script>

        <!-- Stylesheets for tabs-->
        <apex:stylesheet value="{!URLFOR($Resource.APTS_Angular_Material)}"/>
        <apex:stylesheet value="{!URLFOR($Resource.APTS_Angular_Docs)}"/>


        <!--<script src="https://cdnjs.cloudflare.com/ajax/libs/angular-ui/0.4.0/angular-ui.min.js"></script>-->
        <apex:stylesheet value="{!URLFOR($Resource.APTS_ngResource,'bootstrap/css/bootstrap.min.css')}" />
        <apex:stylesheet value="{!URLFOR($Resource.APTS_ngResource,'bootstrap/css/bootstrap-theme.min.css')}" />
        <apex:stylesheet value="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.min.css"/>
        <apex:stylesheet value="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.theme.min.css"/>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.min.css"/>

        <!--Tabs styles-->
        <style>
            .tabsdemoDynamicTabs md-content {
                background-color: transparent !important; }
            .tabsdemoDynamicTabs md-content md-tabs {
                border: 1px solid #e1e1e1; }
            .tabsdemoDynamicTabs md-content md-tabs md-tab-content {
                background: #f6f6f6; }
            .tabsdemoDynamicTabs md-content md-tabs md-tabs-wrapper {
                background: white; }
            .tabsdemoDynamicTabs md-content h1:first-child {
                margin-top: 0; }

            .tabsdemoDynamicTabs md-input-container {
                padding-bottom: 0; }

            .tabsdemoDynamicTabs .remove-tab {
                margin-bottom: 40px; }

            .tabsdemoDynamicTabs .demo-tab > div > div {
                padding: 25px;
                box-sizing: border-box; }

            .tabsdemoDynamicTabs .edit-form input {
                width: 100%; }

            .tabsdemoDynamicTabs md-tabs {
                border-bottom: 1px solid rgba(0, 0, 0, 0.12); }

            .tabsdemoDynamicTabs md-tab[disabled] {
                opacity: 0.5; }

            .tabsdemoDynamicTabs label {
                text-align: left; }

            .tabsdemoDynamicTabs .long > input {
                width: 264px; }

            .tabsdemoDynamicTabs .md-button.add-tab {
                transform: translateY(5px); }
        </style>
        <style>
            
            .checkbox {
                display: inline-block;
                cursor: pointer;
                font-size: 13px; margin-right:10px; line-height:16px;
            }
            input[type="checkbox"]:checked + label::before{
                background-color: #337ab7;
                color:white;
                border-color: #337ab7;
            }
            .checkbox:before {
                content: "";
                display: inline-block;
                width: 16px;
                height: 16px;
                vertical-align:middle;
                text-align: center;
                border:1px solid gray;
                border-radius:2px;
            }
            input[type=checkbox]:checked + .checkbox:before {
                content: "\2713";
                text-shadow: 1px 1px 1px rgba(0, 0, 0, .2);
                font-size: 13px;
            }
        </style>


        <style>
            body .lookupHoverDetail.individualPalette>div>.bPageBlock{
                width:392px !important;
            }
            .lookupHoverDetail{
                z-index: 9999;
            }
            .apt-select-wrap:before {
                border-top-right-radius: 0px;
                border-bottom-right-radius: 0px;
                height: 98%;
                right: 1px;
            }
            .selectInput {
                width: 100px;
                height: 24px;
                border-radius: 0px;
                color: #FFFFFF;
                font-size: 12px;
                padding: 0px;
                text-indent: 5px;
                background-color: rgb(25, 142, 179);
                line-height: 10px;
                font-weight: bold;
            }
            .InputCustomBox{
                border-style: solid;
                border-width: 1px;
            }
            .left-side{
                float:left;
            }
            .right-side{
                float:right;
            }
            .customLabelStyle{
                font-weight:normal;
                line-height:normal;
            }
            .aptPageTitleBarPanel{
                line-height:20px !important;
            }
            .customBody>tr>td{
                padding:3px !important;
                min-height: 50px;
            }
            .table{
                margin-bottom:0px;
            }
            .cell1{
                /*width:20%;*/
                text-align:left;

            }
            .cell2{
                width:10%;
                text-align:left;
                vertical-align: middle !important;
            }
            .cell3{
                width:8%;
                text-align:right;
            }
            .cell4{
                width:3%;
                text-align:center;
            }
            .cell5{
                width:10%;
                text-align:center;
            }
            .cell6{
                width:10%;
                text-align:center;
            }
            .cell11{
                /*width:5%;*/
                text-align:center;
                vertical-align: middle !important;
            }
            .cellEmpty{
                width:1%;
            }
            .cell7{
                width:10%;
                text-align:right;
            }
            .cell8{
                width:10%;
                text-align:center;
            }
            .cell9{
                width:8%;
                text-align:right;
            }
            .cell10{
                width:5%;
                text-align:center;
            }
            .cellTotal{
                width:8%;
                text-align: left;
            }
            .aptRoundedDiv{
                padding-bottom: 0px;
            }
            tr.draggable-row:hover td.customCell {
                background: url('{!URLFOR($Resource.APTS_DragIcon)}') no-repeat 2px 50%;
                cursor:-webkit-grab;
            }
            tr.draggable-row td.customCell:active{
                cursor: -webkit-grabbing;
            }
            .draggable-highlight-row {
                border: 2px dashed rgba(43, 176, 218, 0.25);
                background-color: rgba(105, 170, 191, 0.25);
                height:40px;
            }
            .dynamic-appended-tr{
                height:40px;
            }
            .middlePanelArea{
                margin-bottom:100px;
            }
            .customCell{
                width:5%;
                min-width:18px;
            }
            tr.selected-row td.customCell {
                background-image: url('{!URLFOR($Resource.APTS_DragIcon)}');
                background-color: #1797C0;
                background-position: 10px 50%;
                background-repeat: no-repeat;
            }
            tr.selected-row:hover td.customCell{
                background-image: url('{!URLFOR($Resource.APTS_DragIcon)}');
                background-color: #1797C0;
                background-position: 10px 50%;
                background-repeat: no-repeat;
            }
            i.exchangeIcon {
                font-size: 16px;
            }
            i.exchangeIcon:hover {
                font-size: 16px;
                text-shadow: #DDD 2px 2px 5px;
            }
            .mySmallModalLabel{
                color:white;
                font-size:13px;
            }
            .ApplyIcon {
                display: inline-block;
                border: 1px dashed #1797C0;
                color: #1797C0;
                padding: 3px;
                border-radius: 50%;
                font-size: 14px;
                margin-left: 15px;
            }
            .ApplyIcon:hover {
                border: 1px dashed #0F617B;
                background-color: #1797C0;
                color: white;
            }
            .ApplyIconHeader {
                border: 1px dashed #FDFEFF;
                color: white;
                padding: 2px 3px;
                border-radius: 50%;
                font-size: 12px;
                margin-left: 15px;
                cursor: pointer;
            }
            .ApplyIconHeader:hover {
                border: 1px dashed #0F617B;
                background-color: #1797C0;
                color: white;
            }
            optgroup {
                font-weight: 700;
                color: #005671;
            }
            .primaryProduct{
                display:inline-block;
                margin-left:5px;
                vertical-align: middle;
            }
            .optionProduct{
                margin-left:10px;
                vertical-align: middle;
                display: inline-block;
            }
            .input-group-btn {
                position: relative;
                font-size: 0;
                white-space: nowrap;
                float: left;
                right: 0px;
                width: 40px;
                height: 22px;
                border: solid 1px #A9A9A9;
                vertical-align: middle;
                background-color: #F3F3F3;
                box-sizing: border-box;
            }
            .adjustmentPopupLink{
                font-size: 12px;
                vertical-align: middle;
                display: inline-block;
                width: 100%;
                height: 100%;
                padding-top: 2px;
                cursor:pointer;
            }
            .adjustmentPopupLink:hover{
                text-decoration: none;
                text-shadow:#DDD 1px 1px 3px;
            }
            .customCaret{
                float: right;
                margin-top: 7px;
                margin-right: 4px;
            }
            .group-inputbox {
                display: inline-block;
                float: left;
            }
            .dropdown-menu>li>a{
                padding:2px 0px;
                color: #1797C0;
            }
            .dropdown-menu{
                font-size:12px;
                width:40px;
                min-width:40px;
                z-index:9999;
                margin-top: 1px;
                border-radius:0px;
                text-align: center;
            }
            .dropdown-menu>li>a:focus, .dropdown-menu>li>a:hover{
                background-color:rgb(23, 151, 192);
                color:white;
                background-image:none;
            }
            .dropdown-menu>li>a.active{
                background-color:#DDD;
            }
            tr.recently-moved td {
                background-color: rgba(248, 255, 135, 0.79);
            }

            .main-content{
                margin-top: 15px;
                margin-bottom: 55px;
            }

            .leftPageButtons{
                visibility: hidden;
            }

            .bundle-group-label{
                float: left;
                margin: 2px 0px 0px 6px;
            }

            .bundle-group-icon{
                display: block;
                float: left;
                padding-top: 1px;
            }

            .keep-term-label{
                margin: 0;
            }

            .ml-table{
                border: 1px solid #DDD;
            }

            .ml-table .customHeader tr{
                background: #2a94d6;
            }

            .ml-table .customHeader tr th{
                color:#FFFFFF;
            }

            /*.ml-address-selected{
                background-color: #efd4d4 !important;
            }*/
        </style>
        
        <script type="text/javascript">
            var j$ = jQuery.noConflict();
            var bussinessObjectId='';
            var configRequestId='';
            var G_retUrl = '{!JSENCODE(bundlePageUrlStr)}';
            var decentralized = '{HTMLENCODE(!bundleGroup.APTS_Decentralized__c)}';
            
            
            var accountList = jQuery.parseJSON('{!JSENCODE(JSONAccountsData)}');
            var existingAgreementLocationsList = jQuery.parseJSON('{!JSENCODE(JSONExistingAgreementLocations)}');
            var existingSubscriptionsActionsList = jQuery.parseJSON('{!JSENCODE(JSONExistingSubscriptionActions)}');
            var subsriberLocations = jQuery.parseJSON('{!JSENCODE(JSONSubscriberLocations)}');
            var accountId ='{!HTMLENCODE(Proposal.APTS_SSD_Sold_To__c)}';
            console.log(accountId);

            var agreementLocationsMap = {};
            var subscriptionsActionsMap = {};
            var existingAccounts = {};

            if(subsriberLocations){
                angular.forEach(subsriberLocations, function (subsriberLocation){
                    existingAccounts[subsriberLocation.APTS_Subscriber_Location_SSD__c] = true;
                });
            }

            if(existingAgreementLocationsList){
                angular.forEach(existingAgreementLocationsList, function (agreementLocation){
                    agreementLocationsMap[agreementLocation.APTS_Subscriber_Location_SSD__c] = agreementLocation;
                });

                
                angular.forEach(accountList, function (account){
                    account.accountStatus = 'N/A';
                    if(agreementLocationsMap[account.Id]){
                        var status = agreementLocationsMap[account.Id].APTS_Status__c;
                        account.isSelected = (status == 'New' || status == 'Existing');
                        account.agreementLocationId = agreementLocationsMap[account.Id].Id;
                        account.accountStatus = status;
                    } else if(existingAccounts[account.Id]){
                        account.isSelected = true;
                        account.accountStatus = 'Existing';
                    }

                    if(accountId == account.Id){
                        account.isSelected = true;
                        account.isDisabled = true;
                        account.accountStatus = account.accountStatus == "N/A" ? 'New' : account.accountStatus;
                    }
                });
            }

            if(existingSubscriptionsActionsList){
                angular.forEach(existingSubscriptionsActionsList, function (subscriptionsAction){
                    subscriptionsActionsMap[subscriptionsAction.APTS_Subscription_Number__c+subscriptionsAction.APTS_Product__c] = subscriptionsAction.Id;
                });
            }

            // define the app
            var multiLocationApp = angular.module('multiLocationApp', ['ui.sortable','ngMaterial', 'ngMessages', 'material.svgAssetsCache']);

            multiLocationApp.controller('MultiLocationCtl', function ($scope){
                // Save the Adjustment in Salesforce End
                $scope.accountList = accountList;
                $scope.existingSubscriptions = [];
                $scope.decentralized = (decentralized === true || decentralized === 'true') ? true : false;
                
                $scope.saveMultiLocationData =  function(){
                    var wrapper = {
                        SourceSystemDetails: [],
                        assetLineItems: []
                    };

                    angular.forEach($scope.accountList, function (account){
                        var isSelected = account.isSelected ? true : false;
                        var id = account.agreementLocationId ? account.agreementLocationId : null;
                        var status = account.accountStatus;

                        delete account.isSelected;
                        delete account.agreementLocationId;
                        delete account.accountStatus;
                        delete account.isDisabled;

                        var accountWrapper = {
                            ssd: account,
                            isSelected: isSelected,
                            id: id,
                            status: status
                        };
                        
                        wrapper.SourceSystemDetails.push(accountWrapper);
                    });

                    angular.forEach($scope.existingSubscriptions, function (assetLineItem){
                        var isSelected = assetLineItem.isSelected ? true : false;
                        var id = assetLineItem.subscriptionActionId ? assetLineItem.subscriptionActionId : null;

                        delete assetLineItem.isSelected;
                        delete assetLineItem.subscriptionActionId;

                        var assetLineItemWrapper = {
                            assetLineItem: assetLineItem,
                            isSelected: isSelected,
                            id: id
                        };

                        wrapper.assetLineItems.push(assetLineItemWrapper);
                    });

                    wrapper.decentralized = $scope.decentralized;

                    var filteredJson = angular.toJson(wrapper);
                    console.log('###filteredJson-- '+filteredJson);
                    saveActionFucntion(filteredJson);
                }

                // Cancel the process and return to back page from where it is redirect
                $scope.cancelAndRedirect =  function(){
                    CancelThePage();
                    //j$('.imgCancelSpinner').show();
                    //window.location.href = G_retUrl;
                }

                $scope.populateSubscripion = function(){
                    var selectedAccounts = [];

                    
                    angular.forEach($scope.accountList, function (account){
                        if(account.isSelected){
                            selectedAccounts.push(account.Id);
                        }
                    });

                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.APTS_MultiLocationsController.getAccountAssets}',
                        selectedAccounts, 
                        function(result, event){
                            if (event.status) {
                                $scope.existingSubscriptions = result;

                                angular.forEach($scope.existingSubscriptions, function (subscription){
                                    var key = subscription.APTS_Subscription_Number__c+subscription.Apttus_Config2__ProductId__r.Name;
                                    if(subscriptionsActionsMap[key]){
                                        subscription.isSelected = true;
                                        subscription.subscriptionActionId = subscriptionsActionsMap[key];
                                    }
                                });

                                $scope.$apply();
                            } else if (event.type === 'exception') {
                                alert(event.message + " " + event.where);
                            } else {
                                alert(event.message);
                            }
                        }, 
                        {escape: true}
                    );
                }

                $scope.accountStatusChange = function(account){
                    if(account.isSelected && existingAccounts[account.Id]){
                        account.accountStatus = 'Existing';
                    } else if(!account.isSelected && existingAccounts[account.Id]){
                        account.accountStatus = 'Cancelled';
                    } else if(account.isSelected && !existingAccounts[account.Id]){
                        account.accountStatus = 'New';
                    } else{
                        account.accountStatus = 'N/A';
                    }
                };

                $scope.selectDeselectAllAccounts = function($event){
                    var isChecked = j$($event.target).is(":checked");
                    
                    angular.forEach($scope.accountList, function (account){
                        account.isSelected = isChecked;
                        $scope.accountStatusChange(account);
                    });
                };

                $scope.selectDeselectAllAssetLineItems = function($event){
                    var isChecked = j$($event.target).is(":checked");
                    
                    angular.forEach($scope.existingSubscriptions, function (subscription){
                        subscription.isSelected = isChecked;
                    });
                };

                if(existingAgreementLocationsList){
                    $scope.populateSubscripion();
                }
            });
        </script>
    </head>
    <body  id="MultiLocationCtl" ng-controller="MultiLocationCtl" class="ng-cloak">
        <apex:form id="frm">
            <!-- Top header section bar ###Start### here-->

            <div class="apt-page-header cartTable clearfix" ng-show="tabName != ''">
                <div class="dropdown apt-pull-left">
                    <div class="apt-hamburger-icon apt-dropdown-toggle" data-toggle="dropdown" id="stepMenu" role="button" style="display: none;">
                        <div class="icon-utility-list"></div>
                    </div>
                    <ul aria-labelledby="stepMenu" class="apt-list-dropdown dropdown-menu taskPageButtons dropdown-menu-top" role="menu"><li class="aptProductListHeader">&nbsp;&nbsp;&nbsp;Follow these steps:</li></ul>
                </div>
                <div class="apt-quote-panel apt-pull-left"><span class="apt-cart-head-label">Proposal:</span>
                    &nbsp;<apex:outputField id="ProposalNameWithLink" value="{!Config.Apttus_QPConfig__Proposald__c}"/><span class="apt-location-text apt-cart-head-label">{!Config.Apttus_QPConfig__Proposald__r.Apttus_Proposal__Proposal_Name__c}</span>

                </div>
                <div class="apt-aprroval-panel apt-pull-left"><span class="apt-cart-head-label">Approval Status:</span><span class="approvalText"><span>{!Config.Apttus_QPConfig__Proposald__r.Apttus_Proposal__Approval_Stage__c}</span></span>
                </div>
                <div id="aptGeneralSpinner"></div>
                <div class="apt-headerPlacement apt-pull-right">
                </div>
                <div class="dropdown apt-help-panel apt-pull-right">

                </div>
            </div>
            <!-- Top header section bar ###End### here -->

            <apex:pageMessages id="ErrorMessages" />

            <div class="container">
                <div class="row">
                    <fieldset class="form-group" style="margin-top: 55px;position: relative;">
                        <legend>Bundle Locations <span style="float:right;font-size:12px;font-weight: normal;"><input type="checkbox" name="" ng-model="decentralized" /> Decentralized</span> </legend>
                        <table class="table table-hover table-striped content-table ml-table">
                            <thead class="customHeader">
                                <tr>
                                    <th class="customCell"><input type="checkbox" name="" ng-click="selectDeselectAllAccounts($event)" /></th>
                                    <th>Account Name</th>
                                    <th>Account Name 2</th>
                                    <th>Account SAP Number</th>
                                    <th>Address</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="account in accountList" ng-class="account.isSelected ? 'ml-address-selected' : '' ">
                                    <td><input type="checkbox" name="" ng-model="account.isSelected" ng-disabled="account.isDisabled" ng-change="accountStatusChange(account)" /></td>
                                    <td>{{account.Name}}</td>
                                    <td>{{account.Account_Name__r.Account_Name_2__c}}</td>
                                    <td>{{account.Source_System_Account_Number__c}}</td>
                                    <td>
                                        {{account.City__c}} 
                                        {{account.Number_Street__c}} 
                                        {{account.State__c}} 
                                        {{account.Postal_Code__c}} 
                                    </td>
                                    <td>{{account.accountStatus}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </fieldset>
                    <fieldset class="form-group" style="margin-top: 20px;margin-bottom: 85px;">
                        <legend>
                            Existing Subscriptions &nbsp;&nbsp;&nbsp;
                            <input type="button" value="Populate" style="font-size: 12px;" ng-click="populateSubscripion()" /></legend>
                        <table class="table table-hover table-striped content-table ml-table">
                            <thead class="customHeader">
                                <tr>
                                    <th class="customCell"><input type="checkbox" name="" ng-click="selectDeselectAllAssetLineItems($event)" /></th>
                                    <th>Subscription Number</th>
                                    <th>Contract Number</th>
                                    <th>Product</th>
                                    <th>Account Name</th>
                                    <th>Account Name 2</th>
                                    <th>Account SAP Number</th>
                                    <th>Status</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr ng-repeat="subscription in existingSubscriptions">
                                    <td><input type="checkbox" name="" ng-model="subscription.isSelected"/></td>
                                    <td>{{subscription.APTS_Subscription_Number__c}}</td>
                                    <td>{{subscription.APTS_Contract_Number__c}}</td>
                                    <td>{{subscription.Apttus_Config2__ProductId__r.Name}}</td>
                                    <td>{{subscription.APTS_SSD_Sold_To__r.Name}}</td> 
                                    <td>{{subscription.APTS_SSD_Sold_To__r.Account_Name__r.Account_Name_2__c}}</td>
                                    <td>{{subscription.APTS_SSD_Sold_To__r.Source_System_Account_Number__c}}</td> 
                                    <td>{{subscription.isSelected ? 'Cancelled' : 'N/A'}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </fieldset>
                </div>
            </div>

            <!-- bottom fixed bar ###Start### here -->
            <div class="idCommands clearfix apt-page-footer">
                <div id="idCommandButtonsSection">

                    <ul class="pageButtons leftPageButtons">
                        <li id="RemoveItem" class="aptSpinnerBtn">

                        </li>
                    </ul>
                    <ul class="pageButtons centerPageButtons">
                        <li id="Next" class="aptSpinnerBtn">
                            <div style="display:inline-flex;">
                                <div style="display:none;" id="showGroup"><a href="#" class="aptListButton" ng-click="applyChanges()"><div style="display:none;margin-top: -5px;margin-left: -25px;" class="apt-button-action-spinner" id="saveLoader"><img src="/img/loading.gif"/></div>Apply Changes</a></div>
                                <!--
                                <div  id="addGroup"><a href="#" class="aptListButton" ng-click="addTable('Print')"><div style="display:none;margin-top: -5px;margin-left: -25px;" class="apt-button-action-spinner" id="saveLoader"><img src="/img/loading.gif"/></div>New Group</a></div>
                                -->
                                <div style="display:inline-flex;" ng-show="tabName != ''"><a href="#" class="aptListButton" ng-click="saveMultiLocationData()"><div class="imgSaveSpinner" style="display:none;"><img src="{!$Resource.APTS_SpinningIcon}" border="0"/></div> Save &amp; Return to BundlePage</a></div>
                                <div><a href="#" class="aptListButton" ng-click="cancelAndRedirect()"><div class="imgCancelSpinner" style="display:none;"><img src="{!$Resource.APTS_SpinningIcon}" border="0"/></div>Cancel &amp; Return to BundlePage</a>
                                    <!--<apex:commandButton value="Cancel" action="{!openCartPage}" styleclass="cancelButton" />-->
                                    </div>
                            </div>
                        </li>
                    </ul>
                    <div class="apt-button-action-spinner" style="display:none;"><img src="/img/loading.gif"/></div>
                    <div class="apt-powered-logo"><img src="{!URLFOR($Resource.apttus_config2__CPQDelight,'apt-logo.png')}" alt="Powered By Apttus" title="Powered By Apttus"/></div>

                    <ul class="pageButtons rightPageButtons"><li>&nbsp;</li></ul>
                </div>
            </div>
            <!-- bottom fixed bar ###End### here -->

            
            <apex:outputPanel id="dummyPanel"></apex:outputPanel>
            <apex:actionFunction action="{!saveData}" id="saveActionFucntion" name="saveActionFucntion"  rerender="dummyPanel, ErrorMessages" status="ProgressStatus">
                <apex:param name="JSONData" value="" />
            </apex:actionFunction>
            <apex:actionStatus id="ProgressStatus" onstart="j$('.imgSaveSpinner').show()" onstop="j$('.imgSaveSpinner').hide()">    </apex:actionStatus>
             <apex:actionFunction action="{!openCartPage}" id="CancelThePage" name="CancelThePage"  rerender="dummyPanel, ErrorPanel" status="ProgressStatusCancelPage">
             </apex:actionFunction>
             <apex:actionStatus id="ProgressStatusCancelPage" onstart="j$('.imgCancelSpinner').show()" onstop="j$('.imgCancelSpinner').hide()">    </apex:actionStatus>
        </apex:form>
    </body>
    </html>
</apex:page>